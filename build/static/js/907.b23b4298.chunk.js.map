{"version":3,"file":"static/js/907.b23b4298.chunk.js","mappings":"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","sources":["containers/Sidebar/index.jsx","containers/Sort/index.jsx","redux/actions/sort.js","containers/ProductList/index.jsx","pages/Phone/index.jsx"],"sourcesContent":["import React from 'react'\r\nimport { nanoid } from 'nanoid'\r\nimport { connect } from 'react-redux'\r\n\r\nconst Sidebar = (props) => {\r\n\r\n  const { sidebarProducts: phones } = props\r\n\r\n  // 計算一共有多少個品牌\r\n  const brandCount = () => {\r\n    const myArr = [];\r\n    for (let phone of phones) {\r\n      if (myArr.includes(phone.brand) === false) {\r\n        myArr.push(phone.brand)\r\n      }\r\n    }\r\n    return myArr.length;\r\n  }\r\n\r\n  // 計算每個品牌的商品數量\r\n  const brandNumber = (brand) => {\r\n    const brandArr = phones.filter((phone) => {\r\n      return phone.brand === brand\r\n    })\r\n    return brandArr.length\r\n  }\r\n\r\n  return (\r\n    <div className=\"side-section flex\">\r\n      <h3>\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-handbag\"\r\n          viewBox=\"0 0 16 16\">\r\n          <path\r\n            d=\"M8 1a2 2 0 0 1 2 2v2H6V3a2 2 0 0 1 2-2zm3 4V3a3 3 0 1 0-6 0v2H3.36a1.5 1.5 0 0 0-1.483 1.277L.85 13.13A2.5 2.5 0 0 0 3.322 16h9.355a2.5 2.5 0 0 0 2.473-2.87l-1.028-6.853A1.5 1.5 0 0 0 12.64 5H11zm-1 1v1.5a.5.5 0 0 0 1 0V6h1.639a.5.5 0 0 1 .494.426l1.028 6.851A1.5 1.5 0 0 1 12.678 15H3.322a1.5 1.5 0 0 1-1.483-1.723l1.028-6.851A.5.5 0 0 1 3.36 6H5v1.5a.5.5 0 1 0 1 0V6h4z\" />\r\n        </svg>\r\n        品牌分類\r\n      </h3>\r\n      <hr />\r\n      <ul className=\"brand-list\">\r\n        <li className=\"all-brand\"><a>所有品牌(<span id=\"allNum\">{brandCount()}</span>)</a></li>\r\n        {\r\n          phones.map((phone) => {\r\n            return (\r\n              <li key={nanoid()}><a>{phone.brand}(<span>{brandNumber(phone.brand)}</span>)</a></li>\r\n            )\r\n          })\r\n        }\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect(\r\n  state => ({sidebarProducts: state.sort.sidebarProducts}),\r\n  {}\r\n)(Sidebar)\r\n","import React, { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport axios from 'axios'\r\nimport { updateProducts, updateSidebarProducts } from '../../redux/actions/sort'\r\n\r\nconst Sort = (props) => {\r\n\r\n  const { products: phones, isGrid, updateProducts, updateSidebarProducts } = props\r\n\r\n  // 排序按鈕樣式\r\n  const [sortsBtnStyle, setSortsBtnStyle] = useState({\r\n    isDefaultRank: true,\r\n    isHighToLow: false,\r\n    isLowToHigh: false,\r\n    isAToZ: false,\r\n    isZToA: false\r\n  })\r\n  const { isDefaultRank, isHighToLow, isLowToHigh, isAToZ, isZToA } = sortsBtnStyle\r\n\r\n  // 用於保存最一開始的products數據，供defaultRank排序使用\r\n  const [products, setProducts] = useState([])\r\n\r\n  useEffect(() => {\r\n    // 請求商品數據\r\n    axios('/data/phones.json')\r\n      .then((response) => {\r\n        updateProducts({ sortType: 'isGrid', flag: true, arr: response.data })\r\n        updateSidebarProducts(response.data)\r\n        setProducts(response.data)\r\n      }).catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, [])\r\n\r\n  // 新建一個只有價格的數組\r\n  const pricesArr = phones.map((phone) => {\r\n    return phone.price;\r\n  })\r\n  // 新建一個只有型號的數組\r\n  const modelArr = phones.map((phone) => {\r\n    return phone.model;\r\n  })\r\n\r\n  // 排序按鈕Click事件\r\n  const sortProducts = (sortType, flag, arr) => {\r\n    updateProducts({ sortType, flag, arr })\r\n    if (sortType === 'isGrid') {\r\n      setSortsBtnStyle({ ...sortsBtnStyle, isGrid: flag })\r\n    } else {\r\n      setSortsBtnStyle(() => {\r\n        for (let key in sortsBtnStyle) {\r\n          if (key !== sortType) {\r\n            sortsBtnStyle[key] = false\r\n          } else {\r\n            sortsBtnStyle[sortType] = true\r\n          }\r\n        }\r\n        return sortsBtnStyle\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"all-sorts-container flex\">\r\n      <div className=\"orient-sorts-container\">\r\n        {/* 標準(直向)排序  */}\r\n        <button type=\"button\" className={isGrid ? \"grid-sort sorts-click\" : \"grid-sort sorts-style\"} onClick={() => { sortProducts('isGrid', true, phones) }}>\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\"\r\n            className={isGrid ? \"bi bi-grid-3x3-gap-fill svg-click\" : \"bi bi-grid-3x3-gap-fill svg-style\"} viewBox=\"0 0 16 16\">\r\n            <path\r\n              d=\"M1 2a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v2a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V2zm5 0a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v2a1 1 0 0 1-1 1H7a1 1 0 0 1-1-1V2zm5 0a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v2a1 1 0 0 1-1 1h-2a1 1 0 0 1-1-1V2zM1 7a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v2a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V7zm5 0a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v2a1 1 0 0 1-1 1H7a1 1 0 0 1-1-1V7zm5 0a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v2a1 1 0 0 1-1 1h-2a1 1 0 0 1-1-1V7zM1 12a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v2a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1v-2zm5 0a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v2a1 1 0 0 1-1 1H7a1 1 0 0 1-1-1v-2zm5 0a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v2a1 1 0 0 1-1 1h-2a1 1 0 0 1-1-1v-2z\" />\r\n          </svg>\r\n        </button>\r\n        {/* 序列(橫向)排序  */}\r\n        <button type=\"button\" className={isGrid ? \"list-sort sorts-style\" : \"list-sort sorts-click\"} onClick={() => { sortProducts('isGrid', false, phones) }}>\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\"\r\n            className={isGrid ? \"bi bi-list-ul svg-style\" : \"bi bi-list-ul svg-click\"} viewBox=\"0 0 16 16\">\r\n            <path fillRule=\"evenodd\"\r\n              d=\"M5 11.5a.5.5 0 0 1 .5-.5h9a.5.5 0 0 1 0 1h-9a.5.5 0 0 1-.5-.5zm0-4a.5.5 0 0 1 .5-.5h9a.5.5 0 0 1 0 1h-9a.5.5 0 0 1-.5-.5zm0-4a.5.5 0 0 1 .5-.5h9a.5.5 0 0 1 0 1h-9a.5.5 0 0 1-.5-.5zm-3 1a1 1 0 1 0 0-2 1 1 0 0 0 0 2zm0 4a1 1 0 1 0 0-2 1 1 0 0 0 0 2zm0 4a1 1 0 1 0 0-2 1 1 0 0 0 0 2z\" />\r\n          </svg>\r\n        </button>\r\n      </div>\r\n      <div className=\"btn-sorts-container\">\r\n        <button type=\"button\" className={isDefaultRank ? \"default-rank sorts-click\" : \"default-rank sorts-style\"} onClick={() => { sortProducts('isDefaultRank', true, products) }}>\r\n          <span className={isDefaultRank ? \"svg-click\" : \"svg-style\"}>綜合排名</span>\r\n        </button>\r\n        <button type=\"button\" className={isLowToHigh ? \"low-to-high-price sorts-click\" : \"low-to-high-price sorts-style\"} onClick={() => { sortProducts('isLowToHigh', true, pricesArr) }}>\r\n          <span className={isLowToHigh ? \"svg-click\" : \"svg-style\"}>價格</span>\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\"\r\n            className={isLowToHigh ? \"bi bi-sort-numeric-up-alt svg-click\" : \"bi bi-sort-numeric-up-alt svg-style\"} viewBox=\"0 0 16 16\">\r\n            <path fillRule=\"evenodd\"\r\n              d=\"M11.36 7.098c-1.137 0-1.708-.657-1.762-1.278h1.004c.058.223.343.45.773.45.824 0 1.164-.829 1.133-1.856h-.059c-.148.39-.57.742-1.261.742-.91 0-1.72-.613-1.72-1.758 0-1.148.848-1.836 1.973-1.836 1.09 0 2.063.637 2.063 2.688 0 1.867-.723 2.848-2.145 2.848zm.062-2.735c.504 0 .933-.336.933-.972 0-.633-.398-1.008-.94-1.008-.52 0-.927.375-.927 1 0 .64.418.98.934.98z\" />\r\n            <path\r\n              d=\"M12.438 8.668V14H11.39V9.684h-.051l-1.211.859v-.969l1.262-.906h1.046zM4.5 13.5a.5.5 0 0 1-1 0V3.707L2.354 4.854a.5.5 0 1 1-.708-.708l2-1.999.007-.007a.498.498 0 0 1 .7.006l2 2a.5.5 0 1 1-.707.708L4.5 3.707V13.5z\" />\r\n          </svg>\r\n        </button>\r\n        <button type=\"button\" className={isHighToLow ? \"high-to-low-price sorts-click\" : \"high-to-low-price sorts-style\"} onClick={() => { sortProducts('isHighToLow', true, pricesArr) }}>\r\n          <span className={isHighToLow ? \"svg-click\" : \"svg-style\"}>價格</span>\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\"\r\n            className={isHighToLow ? \"bi bi-sort-numeric-down-alt svg-click\" : \"bi bi-sort-numeric-down-alt svg-style\"} viewBox=\"0 0 16 16\">\r\n            <path fillRule=\"evenodd\"\r\n              d=\"M11.36 7.098c-1.137 0-1.708-.657-1.762-1.278h1.004c.058.223.343.45.773.45.824 0 1.164-.829 1.133-1.856h-.059c-.148.39-.57.742-1.261.742-.91 0-1.72-.613-1.72-1.758 0-1.148.848-1.836 1.973-1.836 1.09 0 2.063.637 2.063 2.688 0 1.867-.723 2.848-2.145 2.848zm.062-2.735c.504 0 .933-.336.933-.972 0-.633-.398-1.008-.94-1.008-.52 0-.927.375-.927 1 0 .64.418.98.934.98z\" />\r\n            <path\r\n              d=\"M12.438 8.668V14H11.39V9.684h-.051l-1.211.859v-.969l1.262-.906h1.046zM4.5 2.5a.5.5 0 0 0-1 0v9.793l-1.146-1.147a.5.5 0 0 0-.708.708l2 1.999.007.007a.497.497 0 0 0 .7-.006l2-2a.5.5 0 0 0-.707-.708L4.5 12.293V2.5z\" />\r\n          </svg>\r\n        </button>\r\n        <button type=\"button\" className={isAToZ ? \"a-to-z-sort sorts-click\" : \"a-to-z-sort sorts-style\"} onClick={() => { sortProducts('isAToZ', true, modelArr) }}>\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\"\r\n            className={isAToZ ? \"bi bi-sort-alpha-down svg-click\" : \"bi bi-sort-alpha-down svg-style\"} viewBox=\"0 0 16 16\">\r\n            <path fillRule=\"evenodd\"\r\n              d=\"M10.082 5.629 9.664 7H8.598l1.789-5.332h1.234L13.402 7h-1.12l-.419-1.371h-1.781zm1.57-.785L11 2.687h-.047l-.652 2.157h1.351z\" />\r\n            <path\r\n              d=\"M12.96 14H9.028v-.691l2.579-3.72v-.054H9.098v-.867h3.785v.691l-2.567 3.72v.054h2.645V14zM4.5 2.5a.5.5 0 0 0-1 0v9.793l-1.146-1.147a.5.5 0 0 0-.708.708l2 1.999.007.007a.497.497 0 0 0 .7-.006l2-2a.5.5 0 0 0-.707-.708L4.5 12.293V2.5z\" />\r\n          </svg>\r\n          <span className={isAToZ ? \"svg-click\" : \"svg-style\"}>排序</span>\r\n        </button>\r\n        <button type=\"button\" className={isZToA ? \"z-to-a-sort sorts-click\" : \"z-to-a-sort sorts-style\"} onClick={() => { sortProducts('isZToA', true, modelArr) }}>\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\"\r\n            className={isZToA ? \"bi bi-sort-alpha-up svg-click\" : \"bi bi-sort-alpha-up svg-style\"} viewBox=\"0 0 16 16\">\r\n            <path fillRule=\"evenodd\"\r\n              d=\"M10.082 5.629 9.664 7H8.598l1.789-5.332h1.234L13.402 7h-1.12l-.419-1.371h-1.781zm1.57-.785L11 2.687h-.047l-.652 2.157h1.351z\" />\r\n            <path\r\n              d=\"M12.96 14H9.028v-.691l2.579-3.72v-.054H9.098v-.867h3.785v.691l-2.567 3.72v.054h2.645V14zm-8.46-.5a.5.5 0 0 1-1 0V3.707L2.354 4.854a.5.5 0 1 1-.708-.708l2-1.999.007-.007a.498.498 0 0 1 .7.006l2 2a.5.5 0 1 1-.707.708L4.5 3.707V13.5z\" />\r\n          </svg>\r\n          <span className={isZToA ? \"svg-click\" : \"svg-style\"}>排序</span>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect(\r\n  state => ({ products: state.sort.products, isGrid: state.sort.isGrid }),\r\n  { updateProducts, updateSidebarProducts }\r\n)(Sort)\r\n","import { UPDATE_PRODUCTS, UPDATE_SIDEBAR_PRODUCTS } from \"../constant\";\r\n\r\nexport const updateProducts = data => {\r\n  const {sortType, arr} = data\r\n  // 加工處理傳遞進來的數組，提前將其改成排好順序的數組\r\n  switch (sortType) {\r\n    case \"isLowToHigh\":\r\n      arr.sort((a, b) => {\r\n        return a - b\r\n      })\r\n      return {type: UPDATE_PRODUCTS, data: {...data, arr}}\r\n\r\n    case \"isHighToLow\":\r\n      arr.sort((a, b) => {\r\n        return b - a\r\n      })\r\n      return {type: UPDATE_PRODUCTS, data: {...data, arr}}\r\n\r\n    case \"isAToZ\":\r\n      arr.sort()\r\n      return {type: UPDATE_PRODUCTS, data: {...data, arr}}\r\n\r\n    case \"isZToA\":\r\n      arr.sort()\r\n      arr.reverse()\r\n      return {type: UPDATE_PRODUCTS, data: {...data, arr}}\r\n  \r\n    default:\r\n      return {type: UPDATE_PRODUCTS, data}\r\n  }\r\n}\r\n\r\nexport const updateSidebarProducts = data => ({type: UPDATE_SIDEBAR_PRODUCTS, data})","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { Modal, Image } from 'antd'\r\nimport ImgPlaceHolder from '../../components/ImgPlaceHolder'\r\nimport { updateUserInfo } from '../../redux/actions/account'\r\n\r\nconst ProductList = (props) => {\r\n\r\n  const { products, isGrid, loginState, userInfo, updateUserInfo } = props\r\n  const { cart } = userInfo\r\n\r\n  const navigate = useNavigate()\r\n\r\n  const addToCart = (product) => {\r\n    if (!loginState) {\r\n      navigate(`/login?next=${encodeURIComponent(window.location.href)}`)\r\n    } else {\r\n      const id = product.id\r\n      const result = cart.find((product) => {\r\n        return product.id === id\r\n      })\r\n      // 如果找不到會是undefined，表示是新的新增品項，則直接加入變新的數組\r\n      if (result === undefined) {\r\n        const newCart = [...cart, product]\r\n        updateUserInfo({ ...userInfo, cart: newCart })\r\n        Modal.success({\r\n          content: '商品已加入購物車！',\r\n        });\r\n      } else {\r\n        // 若有找到一樣的，則數量加一\r\n        const newCart = cart.map((product) => {\r\n          if (product.id === id) {\r\n            const newProduct = { ...product, quantity: product.quantity + 1 }\r\n            return newProduct\r\n          } else {\r\n            return product\r\n          }\r\n        })\r\n        updateUserInfo({ ...userInfo, cart: newCart })\r\n        Modal.success({\r\n          content: '商品已加入購物車！',\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"phones-container flex\" style={isGrid ? { flexDirection: 'row' } : { flexDirection: 'column' }}>\r\n      {/* 商品 區塊 */}\r\n      {\r\n        products.map((product) => {\r\n          return (\r\n            <div key={product.id} className=\"phone-container\" style={isGrid ? { flexDirection: 'column', margin: \"0 5px\" } : { flexDirection: 'row', margin: \"6.5px 30px\" }}>\r\n              {/* 圖片  */}\r\n              <div className=\"phone-img\">\r\n                <Image alt=\"洋蔥購物網\" src={product.imgUrl} preview={false} placeholder={<ImgPlaceHolder style={{width: \"180px\", height: \"180px\"}} />} />\r\n              </div>\r\n              {/* 名稱、價格、加入購物車,願望清單 區塊  */}\r\n              <div className=\"name-price-cartSection-container\" style={isGrid ? { display: \"\", flexDirection: \"\", flex: \"\", marginLeft: \"\" } : { display: \"flex\", flexDirection: \"column\", flex: \"1\", marginLeft: \"10px\" }}>\r\n                {/* 名稱  */}\r\n                <div className=\"phone-name google-phone\" style={isGrid ? { flex: \"\" } : { flex: \"1\" }}>\r\n                  <a><span style={isGrid ? { fontSize: \"14px\" } : { fontSize: '16px' }}>{product.name}</span></a>\r\n                </div>\r\n                {/* 價格  */}\r\n                <div className=\"phone-price\" style={isGrid ? { flex: \"\" } : { flex: \"1\" }}>\r\n                  <span>$</span>\r\n                  {(product.price).toLocaleString()}\r\n                </div>\r\n                {/* 加入購物車、加入願望清單(我的最愛) 區塊  */}\r\n                <div className=\"add-to-cart-wish-list-container\" style={isGrid ? { flex: \"\" } : { flex: \"1\" }}>\r\n                  {/* 加入購物車 按鈕  */}\r\n                  <button className=\"add-cart\" style={isGrid ? { flex: \"\" } : { flex: \"5\" }} onClick={() => { addToCart(product) }}>\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\"\r\n                      className=\"bi bi-cart4\" viewBox=\"0 0 16 16\">\r\n                      <path\r\n                        d=\"M0 2.5A.5.5 0 0 1 .5 2H2a.5.5 0 0 1 .485.379L2.89 4H14.5a.5.5 0 0 1 .485.621l-1.5 6A.5.5 0 0 1 13 11H4a.5.5 0 0 1-.485-.379L1.61 3H.5a.5.5 0 0 1-.5-.5zM3.14 5l.5 2H5V5H3.14zM6 5v2h2V5H6zm3 0v2h2V5H9zm3 0v2h1.36l.5-2H12zm1.11 3H12v2h.61l.5-2zM11 8H9v2h2V8zM8 8H6v2h2V8zM5 8H3.89l.5 2H5V8zm0 5a1 1 0 1 0 0 2 1 1 0 0 0 0-2zm-2 1a2 2 0 1 1 4 0 2 2 0 0 1-4 0zm9-1a1 1 0 1 0 0 2 1 1 0 0 0 0-2zm-2 1a2 2 0 1 1 4 0 2 2 0 0 1-4 0z\" />\r\n                    </svg>\r\n                    <span>加入購物車</span>\r\n                  </button>\r\n                  {/* 加入願望清單 按鈕  */}\r\n                  <button className=\"add-wish-list\" style={isGrid ? { flex: \"\" } : { flex: \"2\" }}>\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\"\r\n                      className=\"bi bi-heart\" viewBox=\"0 0 16 16\">\r\n                      <path\r\n                        d=\"m8 2.748-.717-.737C5.6.281 2.514.878 1.4 3.053c-.523 1.023-.641 2.5.314 4.385.92 1.815 2.834 3.989 6.286 6.357 3.452-2.368 5.365-4.542 6.286-6.357.955-1.886.838-3.362.314-4.385C13.486.878 10.4.28 8.717 2.01L8 2.748zM8 15C-7.333 4.868 3.279-3.04 7.824 1.143c.06.055.119.112.176.171a3.12 3.12 0 0 1 .176-.17C12.72-3.042 23.333 4.867 8 15z\" />\r\n                    </svg>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )\r\n        })\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect(\r\n  state => ({ products: state.sort.products, isGrid: state.sort.isGrid, userInfo: state.account.userInfo, loginState: state.account.loginState }),\r\n  { updateUserInfo }\r\n)(ProductList)","import React from 'react'\r\nimport Header from '../../containers/Header'\r\nimport Slider from '../../components/Main/Slider'\r\nimport Sidebar from '../../containers/Sidebar'\r\nimport Sort from '../../containers/Sort'\r\nimport ProductList from '../../containers/ProductList'\r\n\r\nconst Phone = () => {\r\n  return (\r\n    <>\r\n      <Header />\r\n      <Slider />\r\n      {/* 商品展示、排序法選擇區塊 & 側邊分類欄 區塊 */}\r\n      <div className=\"goods-side-section-container flex max-width\">\r\n        {/* 側邊分類欄  */}\r\n        <Sidebar />\r\n        {/* 商品展示、上方排序法選擇 區塊  */}\r\n        <div className=\"goods-sort-wrapper flex\">\r\n          <div className=\"goods-sort-container\">\r\n            {/* 排序法選擇 橫列  */}\r\n            <Sort />\r\n            {/* 商品顯示 區塊  */}\r\n            <ProductList />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Phone\r\n"],"names":["connect","state","sidebarProducts","sort","props","phones","className","xmlns","width","height","fill","viewBox","d","id","myArr","phone","includes","brand","push","length","brandCount","map","filter","nanoid","products","isGrid","updateProducts","data","sortType","arr","a","b","type","UPDATE_PRODUCTS","reverse","updateSidebarProducts","UPDATE_SIDEBAR_PRODUCTS","useState","isDefaultRank","isHighToLow","isLowToHigh","isAToZ","isZToA","sortsBtnStyle","setSortsBtnStyle","setProducts","useEffect","axios","then","response","flag","catch","err","console","log","pricesArr","price","modelArr","model","sortProducts","key","onClick","fillRule","userInfo","account","loginState","updateUserInfo","cart","navigate","useNavigate","style","flexDirection","product","margin","alt","src","imgUrl","preview","placeholder","ImgPlaceHolder","display","flex","marginLeft","fontSize","name","toLocaleString","result","find","undefined","newCart","Modal","content","quantity","encodeURIComponent","window","location","href","addToCart","Header","Slider"],"sourceRoot":""}