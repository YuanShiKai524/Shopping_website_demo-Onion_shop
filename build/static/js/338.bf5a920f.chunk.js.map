{"version":3,"file":"static/js/338.bf5a920f.chunk.js","mappings":"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","sources":["components/AccountHeader/index.jsx","components/MyATag/index.jsx","containers/Account/index.jsx","pages/Login/index.jsx","redux/actions/account.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport {Link, useLocation} from 'react-router-dom'\r\nimport MyATag from '../MyATag'\r\nimport './index.css'\r\n\r\nconst AccountHeader = () => {\r\n\r\n  const [isSignup, setIsSignup] = useState(false);\r\n\r\n  const location = useLocation()\r\n\r\n  useEffect(() => {\r\n    if(location.pathname === '/signup') {\r\n      setIsSignup(true);\r\n    }\r\n    return () => {\r\n      setIsSignup(false);\r\n    }\r\n  })\r\n\r\n  return (\r\n    <div className=\"login-header-wrapper\">\r\n      <div className=\"login-header-container flex\">\r\n        {/* logo圖與登入 區塊  */}\r\n        <div className=\"flex\">\r\n          {/* Logo圖  */}\r\n          <Link className=\"login-header-logo\" to=\"/\">\r\n            <img src=\"/images/logo.png\" style={{width: \"90px\"}} alt=\"logo\" />\r\n          </Link>\r\n          {/* 登入 字樣  */}\r\n          <div className=\"login-word flex\">{isSignup ? \"註冊\" : \"登入\"}</div>\r\n        </div>\r\n        {/* 需要幫助  */}\r\n        <div className=\"login-help-container flex\">\r\n          <MyATag>需要幫助？</MyATag>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AccountHeader\r\n","import React from 'react'\r\n\r\nconst MyATag = (props) => {\r\n  return (\r\n    <a rel=\"noopener noreferrer\" target=\"_blank\" {...props}>{props.children}</a>\r\n  )\r\n}\r\n\r\nexport default MyATag\r\n","import React, { useEffect, useRef, useState } from 'react'\r\nimport { useLocation, useNavigate } from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport axios from 'axios'\r\nimport {updateLoginState, updateUserInfo} from '../../redux/actions/account'\r\nimport './index.css'\r\n\r\nconst Account = (props) => {\r\n\r\n  const {account: {loginState}, updateLoginState, updateUserInfo, nextUrl} = props\r\n\r\n  const [isLoginPage, setIsLoginPage] = useState(false)\r\n\r\n  const location = useLocation();\r\n\r\n  const emailRef = useRef()\r\n  const pwdRef = useRef()\r\n\r\n  const navigate = useNavigate();\r\n  // 因為navigate只吃路徑值，所以這邊接收到的nextUrl還得經過處理才能變成路徑去使用\r\n  const nextPath = decodeURIComponent(String(nextUrl).substring(window.location.origin.length))\r\n\r\n  useEffect(() => {\r\n    // 檢查路徑是否為登入畫面的，若否，則為註冊畫面用\r\n    if (location.pathname === '/login') {\r\n      setIsLoginPage(true);\r\n    }\r\n    // 如果用戶已登入又想進來登入頁面，就讓他回去原來的頁面\r\n    if (loginState) {\r\n      nextPath.length === 0 ? navigate('/') : navigate(nextPath)\r\n    }\r\n    // 卸載組件前將是否是登入頁面改成false\r\n    return () => {\r\n      setIsLoginPage(false);\r\n    }\r\n  })\r\n\r\n  // 比對登入帳密是否正確\r\n  const checkUser = () => {\r\n    const email = emailRef.current.value\r\n    const password = pwdRef.current.value\r\n    // 發送請求users數據\r\n    axios('/data/users.json')\r\n    .then((response) => {\r\n      const users = response.data\r\n      const resultUserInfo = users.find((user) => {\r\n        return user.email === email && user.password === password\r\n      })\r\n      if (resultUserInfo === undefined) {\r\n        alert('帳號密碼有誤！')\r\n        window.location.href = '/login';\r\n      } else {\r\n        // 更新登入狀態\r\n        updateLoginState(true)\r\n        // 更新登入用戶資訊\r\n        updateUserInfo(resultUserInfo);\r\n        // 讓用戶回到原來的瀏覽畫面\r\n        nextPath.length === 0 ? navigate('/') : navigate(nextPath)\r\n      }\r\n    }).catch((err) => {\r\n      console.log(err)\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className=\"info-container flex\">\r\n      <input type={isLoginPage ? \"email\" : \"text\"} name={isLoginPage ? \"email\" : \"name\"} placeholder={isLoginPage ? \"請輸入電子信箱\" : \"請輸入名字\"} size=\"40\" required autoFocus style={isLoginPage ? {} : { width: \"293px\", marginLeft: \"65px\", appearance: \"auto\" }} ref={emailRef} />\r\n      <br />\r\n      <input className=\"pwd\" type=\"password\" name=\"password\" placeholder=\"請輸入密碼\" size=\"40\" required style={isLoginPage ? {} : { width: \"293px\", marginLeft: \"65px\", appearance: \"auto\" }} ref={pwdRef} />\r\n      <br />\r\n      <div className=\"submit-btn flex\">\r\n        {\r\n          isLoginPage ? \r\n          <input type=\"submit\" value=\"登入\" style={{ cursor: \"pointer\" }} onClick={checkUser} /> :\r\n          <input type=\"submit\" value=\"註冊\" style={{ cursor: \"pointer\" }} />\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect(\r\n  state => ({account: state.account}),\r\n  {updateLoginState, updateUserInfo}\r\n)(Account)\r\n","import React from 'react'\r\nimport { Link, useSearchParams } from 'react-router-dom'\r\nimport AccountHeader from '../../components/AccountHeader'\r\nimport Account from '../../containers/Account'\r\nimport './index.css'\r\n\r\nconst Login = () => {\r\n\r\n  // 這邊獲取search參數，包含的是前一個頁面的路徑(透過search參數傳過來的)\r\n  const [search] = useSearchParams()\r\n  const nextUrl = search.get('next') // 獲取到的是已經經過decode的值\r\n\r\n  return (\r\n    <div>\r\n      {/* 頂端header部分：Logo圖、登入字樣、需要幫助 */}\r\n      < AccountHeader />\r\n      {/* 登入 */}\r\n      < div className=\"login-wrapper flex\" >\r\n        {/* 登入 容器  */}\r\n        < div className=\"login-container\" >\r\n          {/* 登入文字  */}\r\n          <div className=\"info-login-word flex\">登入</div >\r\n          {/* 資料填寫區塊(Email、密碼輸入欄、送出等按鈕) 容器  */}\r\n          <Account nextUrl={nextUrl === null ? window.location.origin : nextUrl} />\r\n          <div className=\"go-to-login flex\">\r\n            <p>還沒有註冊嗎？\r\n              <Link to={nextUrl === null ? `/signup?next=${encodeURIComponent(window.location.origin)}` : `/signup?next=${encodeURIComponent(nextUrl)}`}>註冊</Link>\r\n            </p>\r\n          </div>\r\n        </div >\r\n      </div >\r\n    </div >\r\n  )\r\n}\r\n\r\nexport default Login\r\n","import { LOGIN_STATE, LOGGED_IN_USER } from '../../redux/constant'\r\n\r\nexport const updateLoginState = (data) => ({type: LOGIN_STATE, data})\r\nexport const updateUserInfo = (data) => ({type: LOGGED_IN_USER, data})\r\n"],"names":["useState","isSignup","setIsSignup","location","useLocation","useEffect","pathname","className","to","src","style","width","alt","MyATag","props","rel","target","children","connect","state","account","updateLoginState","updateUserInfo","loginState","nextUrl","isLoginPage","setIsLoginPage","emailRef","useRef","pwdRef","navigate","useNavigate","nextPath","decodeURIComponent","String","substring","window","origin","length","type","name","placeholder","size","required","autoFocus","marginLeft","appearance","ref","value","cursor","onClick","email","current","password","axios","then","response","resultUserInfo","data","find","user","undefined","alert","href","catch","err","console","log","useSearchParams","get","AccountHeader","Account","encodeURIComponent","LOGIN_STATE","LOGGED_IN_USER"],"sourceRoot":""}